[TAIPY]

[DATA_NODE.initial_dataset]
storage_type = "csv"
path = "data/cleaned.csv"
has_header = "True:bool"

[DATA_NODE.train_dataset]

[DATA_NODE.test_dataset]

[DATA_NODE.train_dataset_x]

[DATA_NODE.train_dataset_y]

[DATA_NODE.trained_model_ml]

[DATA_NODE.trained_model_baseline]

[DATA_NODE.test_dataset_x]

[DATA_NODE.test_dataset_y]

[DATA_NODE.forecast_dataset_ml]

[DATA_NODE.forecast_dataset_baseline]

[DATA_NODE.RMSE_ml]

[DATA_NODE.RMSE_baseline]

[TASK.create_train_and_test_data]
function = "algos.algos.create_train_test_data:function"
inputs = [ "initial_dataset:SECTION",]
outputs = [ "train_dataset_x:SECTION", "test_dataset_x:SECTION", "train_dataset_y:SECTION", "test_dataset_y:SECTION", "train_dataset:SECTION", "test_dataset:SECTION",]
skippable = "False:bool"

[TASK.train_model_baseline]
function = "algos.algos.train_model_baseline:function"
inputs = [ "train_dataset_x:SECTION", "test_dataset_x:SECTION", "train_dataset_y:SECTION", "test_dataset_y:SECTION",]
outputs = [ "trained_model_baseline:SECTION", "RMSE_baseline:SECTION", "forecast_dataset_ml:SECTION",]
skippable = "False:bool"

[TASK.train_model_ml]
function = "algos.algos.train_model_ml:function"
inputs = [ "train_dataset_x:SECTION", "test_dataset_x:SECTION", "train_dataset_y:SECTION", "test_dataset_y:SECTION",]
outputs = [ "trained_model_ml:SECTION", "RMSE_ml:SECTION", "forecast_dataset_baseline:SECTION",]
skippable = "False:bool"

[SCENARIO.churn_classification]
tasks = [ "train_model_baseline:SECTION", "train_model_ml:SECTION", "create_train_and_test_data:SECTION",]
additional_data_nodes = []

[SCENARIO.churn_classification.comparators]

[SCENARIO.churn_classification.sequences]
